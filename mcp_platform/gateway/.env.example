# MCP Platform Gateway Environment Configuration
# Copy this file to .env and configure your values

# =============================================================================
# REQUIRED SETTINGS - Must be set for production deployment
# =============================================================================

# Database Configuration
POSTGRES_DB=mcp_gateway
POSTGRES_USER=mcpuser
POSTGRES_PASSWORD=your_secure_postgres_password_here

# Redis Configuration
REDIS_PASSWORD=your_secure_redis_password_here

# Gateway Security
GATEWAY_SECRET_KEY=your_very_long_and_secure_jwt_secret_key_here_at_least_32_chars
GATEWAY_ADMIN_PASSWORD=your_secure_admin_password_here

# Domain Configuration
DOMAIN_NAME=gateway.yourdomain.com

# =============================================================================
# OPTIONAL SETTINGS - Have sensible defaults
# =============================================================================

# Gateway Configuration
GATEWAY_HOST=0.0.0.0
GATEWAY_PORT=8080
GATEWAY_LOG_LEVEL=INFO
GATEWAY_WORKERS=2

# CORS Configuration (comma-separated origins)
# For production, specify your allowed origins instead of *
GATEWAY_CORS_ORIGINS=*

# Database URL (constructed from POSTGRES_* vars above)
# GATEWAY_DATABASE_URL=postgresql://mcpuser:password@postgres:5432/mcp_gateway

# Registry Configuration
GATEWAY_REGISTRY_FILE=/app/registry/registry.json

# =============================================================================
# MONITORING SETTINGS (optional, only if using monitoring profile)
# =============================================================================

# Grafana Admin Password
GRAFANA_ADMIN_PASSWORD=admin

# =============================================================================
# SSL/TLS SETTINGS
# =============================================================================

# Set these if you have custom SSL certificates
# Otherwise, use Let's Encrypt or generate self-signed certs
# SSL_CERT_PATH=/etc/nginx/ssl/fullchain.pem
# SSL_KEY_PATH=/etc/nginx/ssl/privkey.pem

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Only use these for development/testing
# GATEWAY_RELOAD=false
# GATEWAY_DEBUG=false

# For local SQLite database (development only)
# GATEWAY_DATABASE_URL=sqlite:///data/gateway.db

# =============================================================================
# BACKUP SETTINGS
# =============================================================================

# Database backup settings (if using backup scripts)
# BACKUP_RETENTION_DAYS=30
# BACKUP_S3_BUCKET=your-backup-bucket
# AWS_ACCESS_KEY_ID=your_aws_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret

# =============================================================================
# LOGGING SETTINGS
# =============================================================================

# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
# GATEWAY_LOG_LEVEL=INFO
# POSTGRES_LOG_LEVEL=WARNING
# NGINX_LOG_LEVEL=warn

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Gateway workers (adjust based on CPU cores)
# GATEWAY_WORKERS=2

# PostgreSQL connection settings
# POSTGRES_MAX_CONNECTIONS=100
# POSTGRES_SHARED_BUFFERS=256MB

# Redis memory settings
# REDIS_MAXMEMORY=256mb
# REDIS_MAXMEMORY_POLICY=allkeys-lru

# =============================================================================
# EXAMPLE VALUES FOR DEVELOPMENT
# =============================================================================

# Uncomment and modify these for quick development setup:
# POSTGRES_PASSWORD=devpassword123
# REDIS_PASSWORD=devredis123
# GATEWAY_SECRET_KEY=dev_secret_key_at_least_32_characters_long_for_jwt_signing
# GATEWAY_ADMIN_PASSWORD=admin123
# DOMAIN_NAME=localhost
# GATEWAY_LOG_LEVEL=DEBUG

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit this file with real passwords to version control
# 2. Use strong, unique passwords for all services
# 3. Set restrictive CORS origins in production (not *)
# 4. Use HTTPS in production with valid SSL certificates
# 5. Regularly rotate secret keys and passwords
# 6. Consider using external secret management (AWS Secrets Manager, etc.)
# 7. Enable firewall rules to restrict access to database ports
# 8. Use strong PostgreSQL user permissions
# 9. Monitor access logs regularly
# 10. Keep all components updated to latest security patches