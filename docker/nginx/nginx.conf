# Nginx configuration for MCP Platform Gateway
# Optimized for production load balancing and SSL termination

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log detailed;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Hide nginx version
    server_tokens off;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Upstream configuration for MCP Gateway
    upstream mcp_gateway_backend {
        least_conn;
        server mcp-gateway:8080 max_fails=3 fail_timeout=30s;
        # Add more backend servers for high availability
        # server mcp-gateway-2:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Default server block for HTTP (redirect to HTTPS)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Health check endpoint (HTTP)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Main server block for HTTPS
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/default.crt;
        ssl_certificate_key /etc/nginx/ssl/default.key;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozTLS:10m;
        ssl_session_tickets off;

        # HSTS (uncomment for production)
        # add_header Strict-Transport-Security "max-age=63072000" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API endpoints with rate limiting
        location /gateway/api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://mcp_gateway_backend;
            include /etc/nginx/proxy_params;
        }

        # Authentication endpoints with stricter rate limiting
        location /gateway/auth/ {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://mcp_gateway_backend;
            include /etc/nginx/proxy_params;
        }

        # Admin endpoints (add IP restrictions in production)
        location /gateway/admin/ {
            # allow 10.0.0.0/8;
            # allow 172.16.0.0/12;
            # allow 192.168.0.0/16;
            # deny all;
            proxy_pass http://mcp_gateway_backend;
            include /etc/nginx/proxy_params;
        }

        # WebSocket support for real-time features
        location /gateway/ws/ {
            proxy_pass http://mcp_gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # All other gateway endpoints
        location /gateway/ {
            proxy_pass http://mcp_gateway_backend;
            include /etc/nginx/proxy_params;
        }

        # Direct proxy to MCP servers (with authentication)
        location /proxy/ {
            # Remove /proxy prefix and forward to gateway
            rewrite ^/proxy/(.*)$ /gateway/proxy/$1 last;
        }

        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Default location
        location / {
            proxy_pass http://mcp_gateway_backend;
            include /etc/nginx/proxy_params;
        }
    }

    # Include additional server configurations
    include /etc/nginx/conf.d/*.conf;
}